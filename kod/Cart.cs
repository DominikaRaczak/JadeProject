//*****************************************************************************
//
//      This code was generated by the JADE Exposure Wizard.
//
//      JADE Version    : 16.0.02
//      Generation date : niedziela, 6 maja 2018
//      Generated by    : DominikaRaczak
//      JADE Schema     : JadeProject
//      Exposure Name   : JadeProject
//
//      NOTE: You should NOT change this file as it may cause incorrect
//            behaviour. Any changes that you do make will be lost if
//            this code is regenerated.
//
//*****************************************************************************

namespace JadeProject
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using JadeSoftware.Joob;
	using JadeSoftware.Joob.Client;
	using JadeSoftware.Joob.Metadata;
	using JadeSoftware.Joob.Management;
	using JadeSoftware.Joob.MetaSchema;
	using JadeSoftware.Jade.DotNetInterop;

	[System.Runtime.Serialization.KnownTypeAttribute(typeof(Items))]
	[System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
	[System.ComponentModel.DataAnnotations.MetadataTypeAttribute(typeof(CartMetadata))]
	[JadeSoftware.Joob.Client.JoobClassAttribute("Cart", "RootSchema.JadeProject", ClassNamespace="JadeProject")]
	[JadeSoftware.Joob.Metadata.JomlTypeAttribute(JadeSoftware.Joob.Metadata.JomlTypeKind.Class, "Cart", typeof(JoobObject))]
	public partial class Cart : JoobObject
	{
		private static CartMetadata _metaModel;
		partial void _initialize();
		static Cart()
		{
			_metaModel = MetadataCache<CartMetadata>.GetData(null);
		}
		public Cart() :
			this(JadeSoftware.Joob.ClassPersistence.Persistent)
		{
		}
		public Cart(JadeSoftware.Joob.ClassPersistence lifetime) :
			base(lifetime, typeof(Cart), _metaModel.metaClass)
		{
			this._initialize();
		}
		protected Cart(JadeSoftware.Joob.ClassPersistence lifetime, System.Type type, JadeSoftware.Joob.ClassMetadata metaClass) :
			base(lifetime, type, metaClass)
		{
			this._initialize();
		}
	
#region Jade Properties

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("id", typeof(Int32), DatabaseTypeName="Integer")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Int32 Id
		{
			get
			{
				return this.GetPropertyInt32(_metaModel.metaClass, _metaModel.id);
			}
			set
			{
				this.SetPropertyInt32(_metaModel.metaClass, _metaModel.id, value);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("items", typeof(Items), DatabaseTypeName="Items")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Items Items
		{
			get
			{
				return this.GetPropertyReference<Items>(_metaModel.metaClass, _metaModel.items);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("totalPrice", typeof(Decimal), Precision=12, Scale=2, DatabaseTypeName="Decimal")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Decimal TotalPrice
		{
			get
			{
				return this.GetPropertyDecimal(_metaModel.metaClass, _metaModel.totalPrice);
			}
			set
			{
				this.SetPropertyDecimal(_metaModel.metaClass, _metaModel.totalPrice, value);
			}
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("totalWeight", typeof(Decimal), Precision=12, Scale=2, DatabaseTypeName="Decimal")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public Decimal TotalWeight
		{
			get
			{
				return this.GetPropertyDecimal(_metaModel.metaClass, _metaModel.totalWeight);
			}
			set
			{
				this.SetPropertyDecimal(_metaModel.metaClass, _metaModel.totalWeight, value);
			}
		}
	#endregion
	
#region Jade Methods

		[JadeSoftware.Joob.Client.JoobMethodAttribute("addToCart")]
		public void AddToCart(Item pItem)
		{
			using (JadeParam jadeParam = new JadeParamObject(pItem))
			{
				this.SendMessage(_metaModel.addToCart, null, jadeParam);
				return;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("calculateTotalPrice")]
		public void CalculateTotalPrice()
		{
			{
				this.SendMessage(_metaModel.calculateTotalPrice, null);
				return;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("calculateTotalWeight")]
		public void CalculateTotalWeight()
		{
			{
				this.SendMessage(_metaModel.calculateTotalWeight, null);
				return;
			}

		}

		[JadeSoftware.Joob.Client.JoobMethodAttribute("getTotal")]
		public void GetTotal(Person pPerson)
		{
			using (JadeParam jadeParam = new JadeParamObject(pPerson))
			{
				this.SendMessage(_metaModel.getTotal, null, jadeParam);
				return;
			}

		}
	#endregion
	}

	public partial class CartMetadata : JadeSoftware.Joob.IDomainMetadata
	{

		internal JadeSoftware.Joob.ClassMetadata metaClass;
		internal JadeSoftware.Joob.MethodMetadata addToCart;
		internal JadeSoftware.Joob.MethodMetadata calculateTotalPrice;
		internal JadeSoftware.Joob.MethodMetadata calculateTotalWeight;
		internal JadeSoftware.Joob.MethodMetadata getTotal;
		internal JadeSoftware.Joob.PropertyMetadata id;
		internal JadeSoftware.Joob.PropertyMetadata items;
		internal JadeSoftware.Joob.PropertyMetadata totalPrice;
		internal JadeSoftware.Joob.PropertyMetadata totalWeight;

		private CartMetadata()
		{
		}
		partial void InitializeDynamicProperties(JadeSoftware.Joob.Client.IJoobConnection connection);

		public CartMetadata(JadeSoftware.Joob.Client.JoobConnection connection)
		{
			metaClass = new JadeSoftware.Joob.ClassMetadata(connection, typeof(Cart), "Cart", "RootSchema.JadeProject");
			this.InitializeProperties(connection);
			this.InitializeDynamicProperties(connection);
		}

		private void InitializeProperties(JadeSoftware.Joob.Client.IJoobConnection connection)
		{
			addToCart = metaClass.CheckMethod(metaClass,"addToCart");
			calculateTotalPrice = metaClass.CheckMethod(metaClass,"calculateTotalPrice");
			calculateTotalWeight = metaClass.CheckMethod(metaClass,"calculateTotalWeight");
			getTotal = metaClass.CheckMethod(metaClass,"getTotal");
			id = metaClass.CheckProperty("id", typeof(Int32));
			items = metaClass.CheckProperty("items", typeof(Items));
			totalPrice = metaClass.CheckProperty("totalPrice", typeof(Decimal), 12, 2);
			totalWeight = metaClass.CheckProperty("totalWeight", typeof(Decimal), 12, 2);
		}
	}
}
